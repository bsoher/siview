# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.5 on Sat Oct 21 21:12:44 2023
#

import wx

# begin wxGlade: dependencies
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class SiviewUI(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SiviewUI.__init__
        kwds["style"] = kwds.get("style", 0) | wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        sizer_30 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_30, 0, wx.ALL | wx.EXPAND, 4)

        label_11 = wx.StaticText(self, wx.ID_ANY, "Source:")
        sizer_30.Add(label_11, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)

        self.TextSource = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.TextSource.SetMinSize((-1,-1))
        sizer_30.Add(self.TextSource, 1, wx.ALIGN_CENTER_VERTICAL, 0)

        label_2 = wx.StaticText(self, wx.ID_ANY, "X : ")
        sizer_30.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 8)

        self.SpinX = wx.SpinCtrl(self, wx.ID_ANY, "1", min=1, max=64)
        sizer_30.Add(self.SpinX, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        label_3 = wx.StaticText(self, wx.ID_ANY, "Y : ")
        sizer_30.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 4)

        self.SpinY = wx.SpinCtrl(self, wx.ID_ANY, "1", min=1, max=64)
        sizer_30.Add(self.SpinY, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        label_4 = wx.StaticText(self, wx.ID_ANY, "Z : ")
        sizer_30.Add(label_4, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 4)

        self.SpinZ = wx.SpinCtrl(self, wx.ID_ANY, "1", min=1, max=64)
        sizer_30.Add(self.SpinZ, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        label_1 = wx.StaticText(self, wx.ID_ANY, "Scale: ")
        sizer_30.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 8)

        self.FloatScale = FloatSpin(self, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        sizer_30.Add(self.FloatScale, 0, wx.EXPAND, 0)

        self.SizerSplitterWindow = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.SizerSplitterWindow, 1, wx.EXPAND, 0)

        self.SplitterWindow = wx.SplitterWindow(self, wx.ID_ANY, style=wx.SP_3D | wx.SP_BORDER)
        self.SplitterWindow.SetMinimumPaneSize(20)
        self.SizerSplitterWindow.Add(self.SplitterWindow, 1, wx.EXPAND, 0)

        self.PaneLeft = wx.Panel(self.SplitterWindow, wx.ID_ANY)

        sizer_7 = wx.BoxSizer(wx.VERTICAL)

        self.notebook_1 = wx.Notebook(self.PaneLeft, wx.ID_ANY, style=0)
        sizer_7.Add(self.notebook_1, 1, wx.EXPAND, 0)

        self.TabImages = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.notebook_1.AddPage(self.TabImages, "Images")

        sizer_7_copy = wx.BoxSizer(wx.VERTICAL)

        self.PanelImage = wx.Panel(self.TabImages, wx.ID_ANY)
        sizer_7_copy.Add(self.PanelImage, 1, wx.EXPAND, 0)

        sizer_4 = wx.StaticBoxSizer(wx.StaticBox(self.TabImages, wx.ID_ANY, "Image Controls"), wx.VERTICAL)
        sizer_7_copy.Add(sizer_4, 0, wx.EXPAND, 0)

        grid_sizer_1 = wx.FlexGridSizer(1, 9, 2, 2)
        sizer_4.Add(grid_sizer_1, 0, 0, 0)

        self.LabelTop = wx.StaticText(self.TabImages, wx.ID_ANY, "Slice Index : ")
        grid_sizer_1.Add(self.LabelTop, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.SpinSliceIndex = wx.SpinCtrl(self.TabImages, wx.ID_ANY, "0", min=0, max=100)
        grid_sizer_1.Add(self.SpinSliceIndex, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.LabelBottom = wx.StaticText(self.TabImages, wx.ID_ANY, "Calc Image : ")
        grid_sizer_1.Add(self.LabelBottom, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 6)

        self.ChoiceCalcImage = wx.Choice(self.TabImages, wx.ID_ANY, choices=["Integral", "First Point"])
        self.ChoiceCalcImage.SetSelection(0)
        grid_sizer_1.Add(self.ChoiceCalcImage, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.label_18 = wx.StaticText(self.TabImages, wx.ID_ANY, "Floor: ")
        grid_sizer_1.Add(self.label_18, 0, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.RIGHT | wx.TOP, 6)

        self.FloatCalcFloor = wx.SpinCtrlDouble(self.TabImages, wx.ID_ANY, initial=0, min=0.0, max=100.0)
        self.FloatCalcFloor.SetDigits(2)
        grid_sizer_1.Add(self.FloatCalcFloor, 0, 0, 0)

        label_19 = wx.StaticText(self.TabImages, wx.ID_ANY, "Ceil: ")
        grid_sizer_1.Add(label_19, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 6)

        self.FloatCalcCeil = wx.SpinCtrlDouble(self.TabImages, wx.ID_ANY, initial=0, min=0.0, max=100.0)
        self.FloatCalcCeil.SetDigits(2)
        grid_sizer_1.Add(self.FloatCalcCeil, 0, 0, 0)

        self.ButtonCalcReset = wx.Button(self.TabImages, wx.ID_ANY, "Reset", style=wx.BU_EXACTFIT)
        grid_sizer_1.Add(self.ButtonCalcReset, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        sizer_10 = wx.StaticBoxSizer(wx.StaticBox(self.TabImages, wx.ID_ANY, "Sprectral Controls"), wx.VERTICAL)
        sizer_7_copy.Add(sizer_10, 0, wx.EXPAND, 0)

        grid_sizer_2 = wx.FlexGridSizer(4, 4, 0, 0)
        sizer_10.Add(grid_sizer_2, 0, wx.TOP, 3)

        labelApodization = wx.StaticText(self.TabImages, wx.ID_ANY, "Apodize: ")
        grid_sizer_2.Add(labelApodization, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 2)

        self.ComboApodization = wx.ComboBox(self.TabImages, wx.ID_ANY, choices=["None", "Gaussian", "Lorentzian"], style=wx.CB_READONLY)
        self.ComboApodization.SetSelection(0)
        grid_sizer_2.Add(self.ComboApodization, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        Frequency = wx.StaticText(self.TabImages, wx.ID_ANY, "  B0 Shift [Hz]:")
        grid_sizer_2.Add(Frequency, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 3)

        self.FloatFrequency = FloatSpin(self.TabImages, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.TE_PROCESS_ENTER)
        self.FloatFrequency.SetMinSize((80, -1))
        grid_sizer_2.Add(self.FloatFrequency, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 2)

        Width = wx.StaticText(self.TabImages, wx.ID_ANY, "   Width [Hz]:")
        grid_sizer_2.Add(Width, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 2)

        self.FloatWidth = FloatSpin(self.TabImages, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.SP_WRAP | wx.TE_PROCESS_ENTER)
        self.FloatWidth.SetMinSize((50, -1))
        grid_sizer_2.Add(self.FloatWidth, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        Phase0 = wx.StaticText(self.TabImages, wx.ID_ANY, "Phase0 [deg]:")
        grid_sizer_2.Add(Phase0, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 3)

        self.FloatPhase0 = FloatSpin(self.TabImages, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.TE_PROCESS_ENTER)
        self.FloatPhase0.SetMinSize((80, -1))
        grid_sizer_2.Add(self.FloatPhase0, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 2)

        grid_sizer_2.Add((20, 20), 0, wx.EXPAND, 0)

        self.CheckZeroPhase1 = wx.CheckBox(self.TabImages, wx.ID_ANY, "Set Ph1 to Zero")
        grid_sizer_2.Add(self.CheckZeroPhase1, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 3)

        Phase1 = wx.StaticText(self.TabImages, wx.ID_ANY, "Phase1 [deg]:")
        grid_sizer_2.Add(Phase1, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 3)

        self.FloatPhase1 = FloatSpin(self.TabImages, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.TE_PROCESS_ENTER)
        self.FloatPhase1.SetMinSize((80, -1))
        grid_sizer_2.Add(self.FloatPhase1, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 2)

        grid_sizer_2.Add((20, 20), 0, wx.EXPAND, 0)

        grid_sizer_2.Add((20, 20), 0, wx.EXPAND, 0)

        Phase1Pivot = wx.StaticText(self.TabImages, wx.ID_ANY, "Pivot [ppm]:")
        grid_sizer_2.Add(Phase1Pivot, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 3)

        self.FloatPhase1Pivot = FloatSpin(self.TabImages, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.TE_PROCESS_ENTER)
        self.FloatPhase1Pivot.SetMinSize((80, -1))
        grid_sizer_2.Add(self.FloatPhase1Pivot, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 2)

        self.TabSettings = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.notebook_1.AddPage(self.TabSettings, "Settings")

        sizer_5 = wx.BoxSizer(wx.VERTICAL)

        self.panel_2 = wx.Panel(self.TabSettings, wx.ID_ANY)
        sizer_5.Add(self.panel_2, 1, wx.EXPAND, 0)

        sizer_8 = wx.BoxSizer(wx.VERTICAL)

        sizer_9 = wx.StaticBoxSizer(wx.StaticBox(self.panel_2, wx.ID_ANY, "Model"), wx.HORIZONTAL)
        sizer_8.Add(sizer_9, 0, wx.ALL | wx.EXPAND, 4)

        self.label_13 = wx.StaticText(self.panel_2, wx.ID_ANY, "Model : ")
        sizer_9.Add(self.label_13, 0, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.TOP, 2)

        self.ChoiceModel = wx.Choice(self.panel_2, wx.ID_ANY, choices=["Model 1", "Model 2"])
        self.ChoiceModel.SetSelection(0)
        sizer_9.Add(self.ChoiceModel, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        sizer_8.Add((0, 0), 0, 0, 0)

        sizer_8.Add((0, 0), 0, 0, 0)

        sizer_8.Add((0, 0), 0, 0, 0)

        sizer_8.Add((0, 0), 0, 0, 0)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7.Add(sizer_3, 0, wx.ALL | wx.EXPAND, 6)

        sizer_3.Add((0, 0), 0, 0, 0)

        self.ButtonFitAll = wx.Button(self.PaneLeft, wx.ID_ANY, "Fit All Voxels")
        sizer_3.Add(self.ButtonFitAll, 0, wx.EXPAND, 0)

        sizer_3.Add((0, 0), 0, 0, 0)

        sizer_3.Add((0, 0), 0, 0, 0)

        self.PaneRight = wx.Panel(self.SplitterWindow, wx.ID_ANY)

        sizer_6 = wx.BoxSizer(wx.VERTICAL)

        self.PanelPlot = wx.Panel(self.PaneRight, wx.ID_ANY)
        sizer_6.Add(self.PanelPlot, 1, wx.EXPAND, 0)

        self.PaneRight.SetSizer(sizer_6)

        self.panel_2.SetSizer(sizer_8)

        self.TabSettings.SetSizer(sizer_5)

        grid_sizer_1.AddGrowableCol(1)

        self.TabImages.SetSizer(sizer_7_copy)

        self.PaneLeft.SetSizer(sizer_7)

        self.SplitterWindow.SplitVertically(self.PaneLeft, self.PaneRight)

        self.SetSizer(sizer_2)

        self.Layout()

        self.Bind(wx.EVT_SPINCTRL, self.on_voxel, self.SpinX)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_voxel, self.SpinX)
        self.Bind(wx.EVT_SPINCTRL, self.on_voxel, self.SpinY)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_voxel, self.SpinY)
        self.Bind(wx.EVT_SPINCTRL, self.on_voxel, self.SpinZ)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_voxel, self.SpinZ)
        self.Bind(wx.EVT_SPLITTER_SASH_POS_CHANGED, self.on_splitter, self.SplitterWindow)
        self.Bind(wx.EVT_SPINCTRL, self.on_slice_index, self.SpinSliceIndex)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_slice_index, self.SpinSliceIndex)
        self.Bind(wx.EVT_CHOICE, self.on_calc_image, self.ChoiceCalcImage)
        self.Bind(wx.EVT_SPINCTRLDOUBLE, self.on_calc_range, self.FloatCalcFloor)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_calc_range, self.FloatCalcFloor)
        self.Bind(wx.EVT_SPINCTRLDOUBLE, self.on_calc_range, self.FloatCalcCeil)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_calc_range, self.FloatCalcCeil)
        self.Bind(wx.EVT_BUTTON, self.on_calc_reset, self.ButtonCalcReset)
        self.Bind(wx.EVT_COMBOBOX, self.on_apodization_method, self.ComboApodization)
        self.Bind( EVT_FLOATSPIN, self.on_b0_shift, self.FloatFrequency)
        self.Bind( EVT_FLOATSPIN, self.on_apodization_value, self.FloatWidth)
        self.Bind( EVT_FLOATSPIN, self.on_phase0, self.FloatPhase0)
        self.Bind(wx.EVT_CHECKBOX, self.on_phase1_zero, self.CheckZeroPhase1)
        self.Bind( EVT_FLOATSPIN, self.on_phase1, self.FloatPhase1)
        self.Bind( EVT_FLOATSPIN, self.on_phase1_pivot, self.FloatPhase1Pivot)
        self.Bind(wx.EVT_CHOICE, self.on_time_course_model, self.ChoiceModel)
        self.Bind(wx.EVT_BUTTON, self.on_fit_all, self.ButtonFitAll)
        # end wxGlade

    def on_voxel(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_voxel' not implemented!")
        event.Skip()

    def on_splitter(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_splitter' not implemented!")
        event.Skip()

    def on_slice_index(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_slice_index' not implemented!")
        event.Skip()

    def on_calc_image(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_calc_image' not implemented!")
        event.Skip()

    def on_calc_range(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_calc_range' not implemented!")
        event.Skip()

    def on_calc_reset(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_calc_reset' not implemented!")
        event.Skip()

    def on_apodization_method(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_apodization_method' not implemented!")
        event.Skip()

    def on_b0_shift(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_b0_shift' not implemented!")
        event.Skip()

    def on_apodization_value(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_apodization_value' not implemented!")
        event.Skip()

    def on_phase0(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_phase0' not implemented!")
        event.Skip()

    def on_phase1_zero(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_phase1_zero' not implemented!")
        event.Skip()

    def on_phase1(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_phase1' not implemented!")
        event.Skip()

    def on_phase1_pivot(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_phase1_pivot' not implemented!")
        event.Skip()

    def on_time_course_model(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_time_course_model' not implemented!")
        event.Skip()

    def on_fit_all(self, event):  # wxGlade: SiviewUI.<event_handler>
        print("Event handler 'on_fit_all' not implemented!")
        event.Skip()

# end of class SiviewUI

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((858, 956))
        self.SetTitle("frame_1")

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.SiviewUI = SiviewUI(self, wx.ID_ANY)
        sizer_1.Add(self.SiviewUI, 1, wx.EXPAND, 0)

        self.SetSizer(sizer_1)

        self.Layout()
        # end wxGlade

# end of class MyFrame
